cls macro
	pusha
	mov ah, 0x00
	mov al, 0x03  
	int 0x10
	popa
endm
Mapeo MACRO I, J, FILAS, COLUMNA
	MOV AX, I
	MUL FILAS
	ADD AX, J
	MOV COLUMNA, AX
ENDM

.386
.MODEL flat, stdcall
OPTION casemap:none
;INCLUDES
INCLUDE \masm32\include\windows.inc
INCLUDE \masm32\include\kernel32.inc
INCLUDE \masm32\include\masm32.inc
INCLUDE \masm32\include\masm32rt.inc
.DATA
	;variables para el menu
	menuPrincipal		db 13,10,"Por favor, ingrese el numero de opcion a ejecutar:",13,10,09,"a. CIFRADO UTILIZANDO SOLO LA CLAVE ",13,10,09,"b. CIFRADO UTILIZANDO LA CLAVE Y MENSAJE  ",13,10,09,"c. DESCIFRADO UTILIZANDO SOLO LA CLAVE ",13,10,09,"d. DESCIFRADO UTILIZANDO LA CLAVE Y PALABRA",13,10,09,"e. DESCIFRADO ESTADISTICO ",13,10,09,"f. CIFRADO ESTADISTICO",13,10,09,"g. SALIR ",13,10,">",0
	textoOpta			db 13,10,"CIFRADO UTILIZANDO SOLO LA CLAVE",13,10,0
	textoOptb			db 13,10,"CIFRADO UTILIZANDO LA CLAVE Y MENSAJE",13,10,0
	textoOptc			db 13,10,"DESCIFRADO UTILIZANDO SOLO LA CLAVE",13,10,0
	textoOptd			db 13,10,"DESCIFRADO UTILIZANDO LA CLAVE Y PALABRA",13,10,0
	textoOpte			db 13,10,"DESCIFRADO ESTADISTICO",13,10,0
	textoOptf			db 13,10,"CIFRADO ESTADISTICO",13,10,0
	textoOptNoValida	db 13,10,"Por favor, ingrese una opcion valida",13,10,0
	optMenu				db 0,0

	;VARIABLES PARA CREAR LA MATRIZ
	MATRIZ DW 676 DUP (0),0
	CadenaL DB "ABCDEFGHIJKLMNOPQRSTUVWXYZ",0
	salto DB 10d, 0
	espacio DB 32d,0
	ContadorL0 DB 0,0
	ContadorL1 DB 0,0
	ContadorL2 DB 26,0
	pos DB 0,0
	pos1 DB 0,0
	vAux DB 0,0
	;INCISO A
	nt0 DB "INGRESE EL MENSAJE EN CLARO: ", 0
	nt1 DB "INGRESE LA CLAVE: ",0
	nt2 DB "EL TEXTO CIFRADO RESULTANTE SERIA: ",0
	nt3 DB "INGRESE EL MENSAJE CIFRADO EN CLARO: ",0
	nt4 DB "EL TEXTO RESULTANTE SERIA: ",0
	mensaje DB 100 DUP (0) , 0
	clave DB 100 DUP (0) , 0
	MENSAJE DB 100 DUP (0),0
	CLAVE DB 100 DUP (0),0
	limpiar DB 100 DUP (0),0
	cadenaResultante DB 100 DUP (0),0
	posCM DB 0,0
	posCC DB 0,0
	AuxposM DB 0,0
	AuxposC DB 0,0
	FILA DW 0,0
	COLUMNA DW 0,0
	fila DB 26d, 0
	j DW 0, 0
	i DW 0,0
	resultado DW 0,0
	cadenaR DB 100 DUP(0),0
	tamMatriz DW 676,0
	tamMATRIZ DW 676,0
	;VARIABLES INCISO C
	caracter DB 0,0
	contador DW 0,0
.CODE
main:
	;LLENAR LA MATRIZ CON CARACTERES
	MenuPrincipal:
	;cls ; se llama a la macro para limpiar la pantalla
		INVOKE StdOut, ADDR menuPrincipal ; mensaje para mostra el menu y solicitar una opcion
		INVOKE StdIn, ADDR optMenu,10	; se lee la opcion del menu principal
		cmp     optMenu, 'a'				; se evalua que la opcion sea valida
        jl      OptNoValida                                                                
        cmp     optMenu, 'g'				; la opcion debe ser un numero entre a y e             
        jg      OptNoValida                                                        
        cmp     optMenu, 'a'				; la opcion a ejecuta el crifrado con clave
        je      cifClave                                                              
        cmp     optMenu, 'b'				; la opcion b ejecuta el cifrado con clave y palabra
        je      cifClavePalabra    
		cmp     optMenu, 'c'				; la opcion c ejecuta el descifrado con clave
        je      desClave
		cmp     optMenu, 'd'				; la opcion d ejecuta el descifrado con clave y palabra
        je      desClavePalabra
		cmp     optMenu, 'e'				; la opcion d eje cuta el descifrado estadisco
        je      desEstadistico 
		cmp     optMenu, 'f'				; la opcion e eje cuta el cifrado estadisco
        je      cifEstadistico 
        cmp     optMenu, 'g'             ; la opcion f ejecuta la opcion de salir                                                      
        jmp     Salir 

	cifClave:
		INVOKE StdOut, ADDR textoOpta
		CALL LLENARMATRIZ
		CALL CIFRADOCLAVE
		CALL LIMPIARCADENAS
		jmp MenuPrincipal	
	cifClavePalabra:
		INVOKE StdOut, ADDR textoOptb
		CALL LLENARMATRIZ
		CALL CIFRADOCLAVEPALABRA
		CALL LIMPIARCADENAS
		jmp MenuPrincipal	
	desClave:
		INVOKE StdOut, ADDR textoOptc
		CALL LLENARMATRIZ
		CALL DESCIFRADOCLAVE
		CALL LIMPIARCADENAS
		jmp MenuPrincipal
	desClavePalabra:
		INVOKE StdOut, ADDR textoOptd
		jmp MenuPrincipal
	
	desEstadistico:
		INVOKE StdOut, ADDR textoOpte
		jmp MenuPrincipal	
		cifEstadistico:
		INVOKE StdOut, ADDR textoOptf
		jmp MenuPrincipal	
	OptNoValida:
		INVOKE StdOut, ADDR textoOptNoValida	; se da a conocer que la opcion no es valida
		jmp MenuPrincipal
	Salir:
		INVOKE ExitProcess, 0
;PROCEDIMIENTOS INCISO C
DESCIFRADOCLAVE PROC NEAR
	INVOKE StdOut, ADDR nt3
	INVOKE StdIn, ADDR mensaje, 100d
	INVOKE StdOut, ADDR salto
	INVOKE StdOut, ADDR nt1
	INVOKE StdIn, ADDR clave, 100d
	INVOKE StdOut, ADDR salto
	INVOKE StdOut, ADDR nt4
	INVOKE StdOut, ADDR espacio
	CALL VERIFICARCADENAS
	MOV posCM, 0
	MOV posCC, 0
	MOV AuxposM, 0
	MOV AuxposC, 0
DESCIFRAR:
	XOR BX, BX
	XOR AX, AX
	XOR DX, DX
	XOR CX, CX
	;RECORRER LA CADENA MENSAJE QUE CONTENDRï¿½ LA PALABRA CIFRADA
	CALL BPECM
	MOV DL, [ESI]
	MOV caracter, DL
	CMP DL, 00H
	JE FINDESCIFRAR
	;ENCONTRAR EL CARACTER QUE TOCA A BUSCAR DE LA CADENA EN LA CADENA MATRIZ
	CALL BPECC
	CALL BUSCARCOLUMNAENMATRIZ
	;BUSCAR EN ESA FILA LA LETRA DEL MENSAJE Y BUSCAR LA COLUMNA
	CALL ENCONTRARCOLUMNA
	;BUSCAR EN LA MATRIZ EL RESULTADO
	LEA EDI, MATRIZ
	DESMAPEO:
		CMP FILA, 00h
		JE FINDESMAPEO
		INC EDI
		DEC FILA
	JMP DESMAPEO
	FINDESMAPEO:
	XOR DX, DX
	MOV DL, [EDI]
	MOV resultado, DX
	INVOKE StdOut, ADDR resultado
	INVOKE StdOut, ADDR espacio
	INC posCM
	INC posCC
JMP DESCIFRAR
FINDESCIFRAR:
RET
DESCIFRADOCLAVE ENDP

ENCONTRARCOLUMNA PROC NEAR
	;REALIZAR LA BUSQUEDA DE DICHA VARIABLE
	MOV contador, 0
MAPEO0:
	Mapeo COLUMNA, contador, fila, FILA
	;ENCONTRAR ESE VALOR EN LA CADENA
	LEA EDI, MATRIZ
	MAPEO01:
		CMP FILA, 00h
		JE FINMAPEO01
		INC EDI
		DEC FILA
	JMP MAPEO01
	FINMAPEO01:
	MOV DL, [EDI]
	CMP DL, caracter
	JE FINMAPEO0
	INC contador
JMP MAPEO0
FINMAPEO0:
	XOR DX, DX
	MOV DX, contador
	MOV FILA, DX
RET
ENCONTRARCOLUMNA ENDP







;PROCEDIMIENTOS INCISO B
CIFRADOCLAVEPALABRA PROC NEAR
	INVOKE StdOut, ADDR nt0
	INVOKE StdIn, ADDR mensaje, 100d
	INVOKE StdOut, ADDR salto
	INVOKE StdOut, ADDR nt1
	INVOKE StdIn, ADDR clave, 100d
	INVOKE StdOut, ADDR salto
	INVOKE StdOut, ADDR nt2
	INVOKE StdOut, ADDR espacio
	CALL VERIFICARCADENAS
	MOV posCM, 0
	MOV posCC, 0
	MOV AuxposM, 0
	MOV AuxposC, 0
CIFRARP:
	XOR BX, BX
	XOR AX, AX
	XOR DX, DX
	XOR CX, CX
	CALL BPECM
	MOV BL, [ESI]
	CMP BL, 00h
	JE FINCIFRARP
	;BUSCAR EN LA FILA LA POSICION DE DICHA LETRA
	CALL BUSCARFILAENMATRIZ	
	CALL BPECC2
	CALL BUSCARCOLUMNAENMATRIZ
	;REALIZAR EL MAPEO
	MOV vAux, 26d
	Mapeo COLUMNA, FILA, vAux, resultado
	LEA ESI, MATRIZ
	CICLOA:
		CMP resultado, 00h
		JE FINCICLOA
		INC ESI
		DEC resultado
	JMP CICLOA
	FINCICLOA:
	MOV DL, [ESI]
	MOV vAux, DL
	INVOKE StdOut, ADDR vAux
	INC posCC
	INC posCM
JMP CIFRARP
FINCIFRARP:
RET
CIFRADOCLAVEPALABRA ENDP
BPECC2 PROC NEAR
	XOR BX, BX
	XOR DX, DX
	LEA ESI, CLAVE
	MOV DL, posCC
	MOV AuxposC, DL
BUSCAR000:
	MOV BL, AuxposC
	CMP BL, 00h
	JE FINBUSCAR000
	MOV BL, [ESI]
	CMP BL, 00h
	JNE CONTINUAR001
	LEA ESI, MENSAJE
	JMP CONTINUAR000
CONTINUAR001:
	INC ESI
	DEC AuxposC
CONTINUAR000:
JMP BUSCAR000
FINBUSCAR000:
	MOV BL, [ESI]
	CMP BL, 00h
	JNE CONTINUAR002
	LEA ESI, MENSAJE
CONTINUAR002:
RET
BPECC2 ENDP
;PROCEDIMIENTOS INCISO A
LIMPIARCADENAS PROC NEAR
	XOR AX, AX
	;LIMPIAR CADENA MENSAJE
	LEA ESI, mensaje
	LEA EDI, limpiar
LIMPIAR0:
	MOV AL, [ESI]
	CMP AL, 00H
	JE FINLIMPIAR0
	MOV AL, [EDI]
	MOV [ESI], AL
	INC ESI
JMP LIMPIAR0
FINLIMPIAR0:
	;LIMPIAR CADENA CLAVE
	LEA ESI, clave
	LEA EDI, limpiar
LIMPIAR1:
	MOV AL, [ESI]
	CMP AL, 00H
	JE FINLIMPIAR1
	MOV AL, [EDI]
	MOV [ESI], AL
	INC ESI
JMP LIMPIAR1
FINLIMPIAR1:
	;LIMPIAR CADENA MENSAJE2
	XOR AX, AX
	LEA ESI, MENSAJE
	LEA EDI, limpiar
LIMPIAR2:
	MOV AL, [ESI]
	CMP AL, 00H
	JE FINLIMPIAR2
	MOV AL, [EDI]
	MOV [ESI], AL
	INC ESI
JMP LIMPIAR2
FINLIMPIAR2:
	;LIMPIAR CADENA CLAVE2
	XOR AX, AX
	LEA ESI, CLAVE
	LEA EDI, limpiar
LIMPIAR3:
	MOV AL, [ESI]
	CMP AL, 00H
	JE FINLIMPIAR3
	MOV AL, [EDI]
	MOV [ESI], AL
	INC ESI
JMP LIMPIAR3
FINLIMPIAR3:
	;limpiar matriz para revisar
	XOR AX, AX
	LEA ESI, MATRIZ
	LEA EDI, limpiar
	MOV AX, tamMatriz
	MOV tamMATRIZ, AX
LIMPIAR4:
	XOR AX, AX
	MOV AX, tamMATRIZ
	CMP AX, 00H
	JE FINLIMPIAR4
	XOR AX, AX
	MOV AL, [EDI]
	MOV [ESI], AL
	INC ESI
	DEC tamMATRIZ
JMP LIMPIAR4
FINLIMPIAR4:
RET
LIMPIARCADENAS ENDP
CIFRADOCLAVE PROC NEAR
	INVOKE StdOut, ADDR nt0
	INVOKE StdIn, ADDR mensaje, 100d
	INVOKE StdOut, ADDR salto
	INVOKE StdOut, ADDR nt1
	INVOKE StdIn, ADDR clave, 100d
	INVOKE StdOut, ADDR salto
	INVOKE StdOut, ADDR nt2
	INVOKE StdOut, ADDR espacio
	CALL VERIFICARCADENAS
	MOV posCM, 0
	MOV posCC, 0
	MOV AuxposM, 0
	MOV AuxposC, 0
CIFRAR:
	XOR BX, BX
	XOR AX, AX
	XOR DX, DX
	XOR CX, CX
	CALL BPECM
	MOV BL, [ESI]
	CMP BL, 00h
	JE FINCIFRAR
	;BUSCAR EN LA FILA LA POSICION DE DICHA LETRA
	CALL BUSCARFILAENMATRIZ	
	CALL BPECC
	CALL BUSCARCOLUMNAENMATRIZ
	;REALIZAR EL MAPEO
	MOV vAux, 26d
	Mapeo COLUMNA, FILA, vAux, resultado
	LEA ESI, MATRIZ
	CICLOA:
		CMP resultado, 00h
		JE FINCICLOA
		INC ESI
		DEC resultado
	JMP CICLOA
	FINCICLOA:
	MOV DL, [ESI]
	MOV vAux, DL
	INVOKE StdOut, ADDR vAux
	INC posCC
	INC posCM
JMP CIFRAR
FINCIFRAR:
RET
CIFRADOCLAVE ENDP
BUSCARCOLUMNAENMATRIZ PROC NEAR	
	MOV i, 00h
	MOV j, 00H
	MOV vAux, 26d
	MOV COLUMNA, 00H
BUSQUEDA01:
	Mapeo i, j, vAux, COLUMNA
	LEA EDI, MATRIZ
	CICLOB:
		CMP COLUMNA, 00h
		JE FINCICLOB
		INC EDI
		DEC COLUMNA
	JMP CICLOB
	FINCICLOB:
	XOR DX, DX
	MOV DL, [EDI]
	CMP DL, [ESI]
	JE FINBUSQUEDA01
	INC i
JMP BUSQUEDA01
FINBUSQUEDA01:
	MOV DX, i
	MOV COLUMNA, DX
RET
BUSCARCOLUMNAENMATRIZ ENDP
BPECC PROC NEAR
	XOR BX, BX
	XOR DX, DX
	LEA ESI, CLAVE
	MOV DL, posCC
	MOV AuxposC, DL
BUSCAR2:
	MOV BL, AuxposC
	CMP BL, 00h
	JE FINBUSCAR2
	MOV BL, [ESI]
	CMP BL, 00h
	JNE CONTINUAR01
	LEA ESI, CLAVE
	JMP CONTINUAR00
CONTINUAR01:
	INC ESI
	DEC AuxposC
CONTINUAR00:
JMP BUSCAR2
FINBUSCAR2:
	MOV BL, [ESI]
	CMP BL, 00h
	JNE CONTINUAR02
	LEA ESI, CLAVE
CONTINUAR02:
RET
BPECC ENDP
BUSCARFILAENMATRIZ PROC NEAR
	LEA EDI, MATRIZ
	MOV FILA, 00h
MIENTRAS1:
	MOV DL, [ESI]
	CMP DL, [EDI]
	JE FINMIENTRAS1
	INC EDI
	INC FILA
JMP MIENTRAS1
FINMIENTRAS1:
RET
BUSCARFILAENMATRIZ ENDP
BPECM PROC NEAR
	XOR DX, DX
	LEA ESI, MENSAJE
	MOV DL, posCM
	MOV AuxposM, DL
BUSCAR1:
	MOV BL, AuxposM
	CMP BL, 00h
	JE FINBUSCAR1
	INC ESI
	DEC AuxposM
JMP BUSCAR1
FINBUSCAR1:
RET
BPECM ENDP
VERIFICARCADENAS PROC NEAR
	;VERIFICAR CADENA MENSAJE
	LEA ESI, mensaje
	LEA EDI, MENSAJE
VERIFICAR0:
	MOV DL, [ESI]
	CMP DL, 00h
	JE FINVERIFICAR0
	;COMPARAR LOS CARACTERES DE LA CADENA
	CMP DL, 65d
	JL NOVALIDO0
	CMP DL, 90d
	JG NOVALIDO0
	MOV [EDI], DL
	INC EDI
NOVALIDO0:
	INC ESI
JMP VERIFICAR0
FINVERIFICAR0:
	;VERIFICAR CADENA CLAVE
	LEA ESI, clave
	LEA EDI, CLAVE
VERIFICAR1:
	MOV DL, [ESI]
	CMP DL, 00h
	JE FINVERIFICAR1
	;COMPARAR LOS CARACTERES DE LA CADENA
	CMP DL, 65d
	JL NOVALIDO1
	CMP DL, 90d
	JG NOVALIDO1
	MOV [EDI], DL
	INC EDI
NOVALIDO1:
	INC ESI
JMP VERIFICAR1
FINVERIFICAR1:
RET
VERIFICARCADENAS ENDP
;METODOS PARA CREAR LA MATRIZ
LLENARMATRIZ PROC FAR
	XOR BX, BX
	XOR CX, CX
	XOR AX, AX
	XOR DX, DX
	MOV pos, 0
	MOV pos1,0
	MOV ContadorL0,0
	LEA ESI, MATRIZ
	MOV AL, ContadorL2
	MOV ContadorL0, AL
CICLOL:
	MOV AL, ContadorL0
	CMP AL, 00h
	JE FINCICLOL
	;ENCONTRAR LA LETRA EN LA QUE DEBE DE EMPEZAR LA LETRA DE LA SIGUIENTE FILA
	CALL ENCONTRARLETRA
	MOV DL, [EDI]
	;INGRESAR A LA CADENA MATRIZ
	CALL INGRESARAMATRIZ
	INC pos
	DEC ContadorL0
JMP CICLOL
FINCICLOL:
RET
LLENARMATRIZ ENDP
ENCONTRARLETRA PROC NEAR
	MOV DL, pos
	MOV pos1, DL
	LEA EDI, CadenaL
ENCONTRAR:
	CMP pos1, 00h
	JE FINENCONTRAR
	DEC pos1
	INC EDI
JMP ENCONTRAR
FINENCONTRAR:
RET
ENCONTRARLETRA ENDP
INGRESARAMATRIZ PROC NEAR
	MOV AL, ContadorL2
	MOV ContadorL1, AL
INGRESO:
	CMP ContadorL1, 00h
	JE FININGRESO
	MOV DL, [EDI]
	CMP DL, 00h
	JNE SALTOINGRESO
	LEA EDI, CadenaL
SALTOINGRESO:
	MOV DL, [EDI]
	MOV [ESI], DL
	INC ESI
	INC EDI
	DEC ContadorL1
JMP INGRESO
FININGRESO:
RET
INGRESARAMATRIZ ENDP
END main